{"version":3,"file":"static/js/716.16decf3b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/hoc/WithAuthRedirect.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { filterContact } from 'redux/Filter/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.filterContact);\n\n  return (\n    <div className={css.inputContainer}>\n      <label className={css.label}>\n        Search:\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={event => {\n            dispatch(filterContact(event.target.value));\n          }}\n          className={css.input}\n          placeholder=\" \"\n        />\n      </label>\n    </div>\n  );\n};\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nconst WithAuthRedirect = (Component, navigateTo) => {\n  const ProtectedComponent = props => {\n    const userData = useSelector(state => state.auth.userData);\n\n    return userData !== null ? (\n      <Component {...props} />\n    ) : (\n      <Navigate to={navigateTo} />\n    );\n  };\n\n  return ProtectedComponent;\n};\n\nexport default WithAuthRedirect;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Filter from 'components/Filter/Filter';\nimport WithAuthRedirect from 'components/hoc/WithAuthRedirect';\nimport ErrorIndicator from 'components/ErrorIndicator/ErrorIndicator';\nimport Loader from 'components/Loader/Loader';\n\nimport {\n  addContact,\n  removeContact,\n  requestContacts,\n} from '../redux/Contacts/thunk';\n\nimport css from '../App.module.css';\nimport {\n  filteredContacts,\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectUserData,\n} from 'redux/Contacts/selectors';\n\n// UI - User Interface(React)\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const userData = useSelector(selectUserData);\n  const filterContacts = useSelector(filteredContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    if (userData == null) return;\n    dispatch(requestContacts());\n  }, [userData, dispatch]); // componentDidMount\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const formData = {\n      name,\n      number,\n    };\n    if (contacts.some(contact => contact.name === formData.name)) {\n      return alert(`${formData.name} is already in contacts.`);\n    }\n    dispatch(addContact(formData));\n    setName('');\n    setNumber('');\n  };\n\n  const handleDeleteContact = contactId => {\n    dispatch(removeContact(contactId));\n  };\n\n  const hasError = error?.length > 0;\n  return (\n    <>\n      {hasError && <ErrorIndicator error={error} />}\n      <div className={css.mainWrapper}>\n        <div className={css.list}>\n          {isLoading && <Loader />}\n          <form onSubmit={handleSubmit}>\n            <h3>Додати новий контакт</h3>\n            <label>\n              Name:\n              <input\n                value={name}\n                onChange={e => setName(e.target.value)}\n                type=\"text\"\n              />\n            </label>\n            <label>\n              Number:\n              <input\n                type=\"tel\"\n                value={number}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                onChange={e => setNumber(e.target.value)}\n              />\n            </label>\n            <br />\n            <br />\n            <button disabled={isLoading} type=\"submit\">\n              Додати контакт\n            </button>\n          </form>\n          <br />\n          <h3>Шукати контакт</h3>\n          <Filter />\n          <h3>Список контактів</h3>\n          {Array.isArray(contacts) && contacts.length === 0 && (\n            <p>\n              У вас відсутні контакти, додайте хочаб один для того, щоб їх\n              побачити!\n            </p>\n          )}\n          {Array.isArray(filterContacts) &&\n            filterContacts.map(contact => {\n              return (\n                <div key={contact.id} className={css.postItem}>\n                  <h3>{contact.name}</h3>\n                  <p>{contact.number}</p>\n                  <button\n                    disabled={isLoading}\n                    onClick={() => handleDeleteContact(contact.id)}\n                  >\n                    видалити контакт\n                  </button>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst ProtectedContactsPage = WithAuthRedirect(ContactsPage, '/login');\n\nexport default ProtectedContactsPage;\n"],"names":["dispatch","useDispatch","value","useSelector","state","filterContact","className","css","type","name","onChange","event","target","placeholder","Component","navigateTo","props","auth","userData","to","WithAuthRedirect","contacts","selectContacts","isLoading","selectIsLoading","error","selectError","selectUserData","filterContacts","filteredContacts","useState","setName","number","setNumber","useEffect","requestContacts","hasError","length","ErrorIndicator","Loader","onSubmit","preventDefault","formData","some","contact","alert","addContact","e","pattern","title","disabled","Array","isArray","map","onClick","contactId","id","removeContact"],"sourceRoot":""}